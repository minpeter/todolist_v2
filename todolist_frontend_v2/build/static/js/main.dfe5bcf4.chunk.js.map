{"version":3,"sources":["components/input.js","components/todo.js","App.js","reportWebVitals.js","index.js"],"names":["Input","props","onSubmit","handleSubmit","type","required","value","input","onChange","handleChange","Todo","className","todo","completed","onClick","handleClick","todoName","handleDelete","id","App","baseUrl","useState","todos","setTodos","setInput","getTodos","a","axios","get","then","response","console","log","data","catch","error","useEffect","e","preventDefault","post","insertTodo","target","map","put","updateTodo","delete","filter","deleteTodo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAYeA,MAZf,SAAeC,GACX,OACI,uBAAMC,SAAUD,EAAME,aAAtB,UACA,8CAEE,uBAAOC,KAAK,OAAOC,UAAU,EAAMC,MAAOL,EAAMM,MAAOC,SAAUP,EAAMQ,kBAEzE,uBAAOL,KAAK,SAASE,MAAM,eCSpBI,MAhBf,SAAcT,GACV,OACI,qBAAKU,UAAU,OAAf,SACM,+BACE,uBACEA,UAAaV,EAAMW,KAAKC,UAAY,YAAc,KAClDC,QAASb,EAAMc,YAFjB,SAGGd,EAAMW,KAAKI,WAEd,uBACEF,QAASb,EAAMgB,aADjB,gCAPmBhB,EAAMW,KAAKM,KCgH/BC,MA3Gf,WAEE,IAAMC,EAAU,0BAFH,EAIaC,mBAAS,IAJtB,mBAINC,EAJM,KAICC,EAJD,OAKcF,mBAAS,IALvB,mBAKNd,EALM,KAKCiB,EALD,cAWEC,IAXF,2EAWb,sBAAAC,EAAA,sEACQC,IACHC,IAAIR,EAAU,SACdS,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAASG,MACrBV,EAASO,EAASG,SAEnBC,OAAM,SAACC,GACNJ,QAAQI,MAAMA,MARpB,4CAXa,sBAwFb,OAjFAC,qBAAU,WACRX,MACC,IAgFD,sBAAKd,UAAU,MAAf,UACE,2CACA,cAAC,EAAD,CAAOR,aApEX,SAAoBkC,GAClBA,EAAEC,iBAEc,uCAAG,sBAAAZ,EAAA,sEACXC,IACHY,KAAKnB,EAAU,QAAS,CACvBJ,SAAUT,IAEXsB,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAASG,MACrBT,EAAS,IACTC,OAEDS,OAAM,SAACC,GACNJ,QAAQI,MAAMA,MAXD,2CAAH,oDAchBK,GACAT,QAAQC,IAAI,2CAkDuBzB,MAAOA,EAAOE,aARnD,SAAoB4B,GAClBA,EAAEC,iBACFd,EAASa,EAAEI,OAAOnC,UASdgB,EACEA,EAAMoB,KAAI,SAAC9B,GACX,OACE,cAAC,EAAD,CAAoBA,KAAMA,EAAMG,YAAa,kBArDnCG,EAqDoDN,EAAKM,GApD3D,uCAAG,sBAAAQ,EAAA,sEACXC,IACHgB,IAAIvB,EAAU,SAAWF,EAAI,IAC7BW,MAAK,SAACC,GACLP,EACED,EAAMoB,KAAI,SAAC9B,GAAD,OACVA,EAAKM,KAAOA,EAAZ,2BAAqBN,GAArB,IAA2BC,WAAYD,EAAKC,YAAaD,SAI5DsB,OAAM,SAACC,GACNJ,QAAQI,MAAMA,MAXD,2CAAH,oDAchBS,QACAb,QAAQC,IAAI,0CAhBd,IAAoBd,GAqD8DD,aAAc,kBAlC5EC,EAkC6FN,EAAKM,GAjCpG,uCAAG,sBAAAQ,EAAA,sEACXC,IACHkB,OAAOzB,EAAU,SAAWF,GAC5BW,MAAK,SAACC,GACLP,EACED,EAAMwB,QAAO,SAAClC,GAAD,OACbA,EAAKM,KAAOA,SAIfgB,OAAM,SAACC,GACNJ,QAAQI,MAAMA,MAXD,2CAAH,oDAchBY,QACAhB,QAAQC,IAAI,0CAhBd,IAAoBd,IAkCCN,EAAKM,OAGlB,SC/FK8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.dfe5bcf4.chunk.js","sourcesContent":["function Input(props) {\n    return (\n        <form onSubmit={props.handleSubmit}>\n        <label>\n          Todo &nbsp;\n          <input type=\"text\" required={true} value={props.input} onChange={props.handleChange} />\n        </label>\n        <input type=\"submit\" value=\"Create\" />\n      </form>\n    );\n}\n\nexport default Input;","function Todo(props) {\n    return (\n        <div className=\"todo\" key={props.todo.id}>\n              <h3>\n                <label\n                  className = {props.todo.completed ? \"completed\" : null}\n                  onClick={props.handleClick}>\n                  {props.todo.todoName}\n                </label>\n                <label\n                  onClick={props.handleDelete}>&nbsp;&nbsp;❌</label>\n              </h3>\n            </div>\n    );\n}\n\nexport default Todo;","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport axios from 'axios';\n\nimport Input from './components/input';\nimport Todo from './components/todo';\n\nfunction App() {\n  \n  const baseUrl = \"http://192.168.0.6:8080\"\n  \n  const [todos, setTodos] = useState([]);\n  const [input, setInput] =  useState('')\n\n  useEffect(() => {\n    getTodos();\n  }, []);\n\n  async function getTodos() {\n    await axios\n      .get(baseUrl + \"/todo\")\n      .then((response) => {\n        console.log(response.data);\n        setTodos(response.data);\n      })\n      .catch((error) => {\n        console.error(error)\n      })\n  }\n\n  function insertTodo(e) {\n    e.preventDefault();\n    \n    const insertTodo = async () => {\n      await axios\n        .post(baseUrl + \"/todo\", {\n          todoName: input\n        })\n        .then((response) => {\n          console.log(response.data)\n          setInput(\"\");\n          getTodos();\n        })\n        .catch((error) => {\n          console.error(error)\n        })\n    }\n    insertTodo();\n    console.log(\"할일이 추가됨!\")\n  }\n  \n  function updateTodo(id) {\n    const updateTodo = async () => {\n      await axios\n        .put(baseUrl + \"/todo/\" + id, {})\n        .then((response) => {\n          setTodos(\n            todos.map((todo) =>\n            todo.id === id ? {...todo, completed: !todo.completed} : todo\n            )\n          )\n        })\n        .catch((error) => {\n          console.error(error)\n        })\n    }\n    updateTodo();\n    console.log(\"할일이 수정됨!\")\n  }\n\n  function deleteTodo(id) {\n    const deleteTodo = async () => {\n      await axios\n        .delete(baseUrl + \"/todo/\" + id)\n        .then((response) => {\n          setTodos(\n            todos.filter((todo) =>\n            todo.id !== id\n            )\n          )\n        })\n        .catch((error) => {\n          console.error(error)\n        })\n    }\n    deleteTodo();\n    console.log(\"할일이 삭제됨!\")\n  }\n\n\n  function changeText(e) {\n    e.preventDefault();\n    setInput(e.target.value)\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>TODO LIST</h1>\n      <Input handleSubmit={insertTodo} input={input} handleChange={changeText} />\n\n      {\n        todos\n        ? todos.map((todo) => {\n          return (\n            <Todo key={todo.id} todo={todo} handleClick={() => updateTodo(todo.id)} handleDelete={() => deleteTodo(todo.id)} />\n           )\n        })\n        : null\n      }\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}